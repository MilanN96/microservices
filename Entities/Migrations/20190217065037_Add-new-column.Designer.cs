// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SurveyMicroservices.Models;

namespace Entities.Migrations
{
    [DbContext(typeof(SurveyContext))]
    [Migration("20190217065037_Add-new-column")]
    partial class Addnewcolumn
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SurveyMicroservices.Models.Answer", b =>
                {
                    b.Property<long>("AnswerID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AnswerValue")
                        .IsRequired();

                    b.Property<long>("QuestionID");

                    b.HasKey("AnswerID");

                    b.HasIndex("QuestionID");

                    b.ToTable("Answer");
                });

            modelBuilder.Entity("SurveyMicroservices.Models.OfferedAnswer", b =>
                {
                    b.Property<long>("OfferedAnswerID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Answer")
                        .IsRequired();

                    b.Property<long>("QuestionID");

                    b.HasKey("OfferedAnswerID");

                    b.HasIndex("QuestionID");

                    b.ToTable("OfferedAnswer");
                });

            modelBuilder.Entity("SurveyMicroservices.Models.Question", b =>
                {
                    b.Property<long>("QuestionID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("QuestionValue")
                        .IsRequired();

                    b.Property<long>("SurveyID");

                    b.Property<long>("TypeOfQuestionID");

                    b.HasKey("QuestionID");

                    b.HasIndex("SurveyID");

                    b.HasIndex("TypeOfQuestionID");

                    b.ToTable("Question");
                });

            modelBuilder.Entity("SurveyMicroservices.Models.Survey", b =>
                {
                    b.Property<long>("SurveyID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationDate");

                    b.Property<string>("Description")
                        .IsRequired();

                    b.Property<bool>("IsActive");

                    b.Property<string>("Language")
                        .IsRequired();

                    b.Property<string>("SurveyName")
                        .IsRequired();

                    b.Property<Guid>("UserID");

                    b.HasKey("SurveyID");

                    b.ToTable("Survey");
                });

            modelBuilder.Entity("SurveyMicroservices.Models.TypeOfQuestion", b =>
                {
                    b.Property<long>("TypeOfQuestionID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Format")
                        .IsRequired();

                    b.Property<string>("TypeName")
                        .IsRequired();

                    b.HasKey("TypeOfQuestionID");

                    b.ToTable("TypeOfQuestion");
                });

            modelBuilder.Entity("SurveyMicroservices.Models.Answer", b =>
                {
                    b.HasOne("SurveyMicroservices.Models.Question", "Question")
                        .WithMany("Answers")
                        .HasForeignKey("QuestionID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SurveyMicroservices.Models.OfferedAnswer", b =>
                {
                    b.HasOne("SurveyMicroservices.Models.Question", "Question")
                        .WithMany("OfferedAnswars")
                        .HasForeignKey("QuestionID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SurveyMicroservices.Models.Question", b =>
                {
                    b.HasOne("SurveyMicroservices.Models.Survey", "Survey")
                        .WithMany("Questions")
                        .HasForeignKey("SurveyID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SurveyMicroservices.Models.TypeOfQuestion", "TypeOfQuestion")
                        .WithMany("Questions")
                        .HasForeignKey("TypeOfQuestionID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
